
# 网关功能：限流配置，ip黑名单，动态路由配置，接口日志，监控，权限校验配置

user  root;
worker_processes        auto;
worker_cpu_affinity     auto;
error_log  logs/error.log info;
pid        logs/nginx.pid;

events {
    accept_mutex on;  # Solve the shock group
    multi_accept on;  # Allow worker processes to receive multiple requests at the same time
    worker_connections  10240;  # 单个worker最大连接数
    use epoll;
}

stream {
    include upstream_tcp.conf;
}

http {
    include  mime.types;
    default_type application/json;
    log_format json_format '{"timestamp":"$time_iso8601",'
        '"version":"openresty-1.21",'
        '"server_addr":"$server_addr",'
        '"remote_addr":"$remote_addr",'
        '"host":"$host",'
        '"uri":"$uri",'
        '"body_bytes_sent":$body_bytes_sent,'
        '"request":"$request",'
        '"request_length":$request_length,'
        '"request_time":$request_time,'
        '"status":$status,'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
        '}';

    resolver 8.8.8.8 114.114.114.114 valid=3600s;
    access_log  logs/js.log  json_format buffer=16384 flush=3;
    sendfile                    on;
    tcp_nopush                  on;
    tcp_nodelay                 on;
    gzip                        on;
    keepalive_timeout           60;
    send_timeout                10s;
    lua_package_path            "/usr/local/openresty/nginx/conf/luaSrc/?.lua;/usr/local/openresty/lualib/?.lua;/usr/local/openresty/site/lualib/?.lua";
    lua_package_cpath           "/usr/local/openresty/lualib/?.so";
    lua_code_cache              off;
    lua_regex_cache_max_entries 255;
    lua_ssl_verify_depth        5;
    lua_shared_dict             s_ip_limit  1m;
    access_by_lua_block {
        local rate = require("rate/ipLimit")
        rate.limit()
    }

    include upstream_http.conf;
    server {
        listen 1900;
        server_name localhost;
        default_type text/json;
        include service.conf;
        location /dev {
            content_by_lua_block {
                local dev = require("dev")
                dev:exec()
            }
        }

        location /debug/http {
            content_by_lua_block {
                local debug = require("http_test")
                debug.Handler()
            }
        }
    }
}
