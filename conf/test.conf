
# https
server {
    listen                  443 ssl http2;
    ssl_certificate         /usr/local/openresty/nginx/conf/crt/fake.crt;
    ssl_certificate_key     /usr/local/openresty/nginx/conf/crt/fake.key;
    ssl_protocols           TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_session_cache       builtin:1000 shared:SSL:10m;  # 使用TLS session优化https性能
    ssl_certificate_by_lua_block {
        local handler = require("access/ssl")
        handler:Exec()
    }

    error_page  500 502 503 504  /50x.html;
    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.htm;
    }
    location = /nginx_status {
        stub_status;
        access_log      off;
        log_not_found   off;
        allow           127.0.0.1;
    }
}

upstream test_backend {
    server              127.0.0.1;
    balancer_by_lua_block {
        local load    = require("upstream/balance")
        load.LoadBalance()
    }
    keepalive           320;
    keepalive_requests  1000;
    keepalive_timeout   60s;
}

# http
server {
    listen 8000;
    server_name localhost;
    location /debug {
        access_log              logs/access.log api_log buffer=16384 flush=3;
        content_by_lua_block {
            local dev = require("dev")
            dev:exec()
        }
    }
    location /upstream {
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Request-ID    $request_id;
        proxy_connect_timeout   1s;
        proxy_pass              http://test_backend;
        include                 conf/upstream_log.conf;
    }
    location /ddos/req {
        limit_req zone=api;
        return 200;
    }
    location /ddos/coon {
        limit_conn addr 3; # 每秒3个连接，即3个并发
        return 200;
    }
}
